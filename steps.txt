qisqacha xulosa loyihani serverga yuklayotgabda bir nechta qadamlardan utuish talab etiladi.

1 qaysidir online serverdan tekin yoki pullik sever sotib olish bulaerga cloud yoke heroku ga uxshagan online sever tizimlari kirishi mumkin.
odatda web dasturchilari ozining loyihasini pullik linux dasturlatriga yuklagashadi deyarli 99% dasturlar linux tizimiga urnatilgan ,

2,loyihadi termenalda   deployga tayorlash , bunda bazi qadamlardan utishimiz lozim ,
deployga tayyorlayotganda linux terminalda yoki sudo yoki nano buyruqlardan ishlatamiz,
misol uchun




sudo apt update
sudo apt install python3-venv
sudo apt install nginx -y



cd /var/www/html/
nano index.nginx-debian.html




loyihani kompyuterdan github ga yuklash kerak

serverda loyihani githubdan clone qilish kerak /root/ yo'nalishiga
virtual muhit hosil qilish kerak (python3 -m venv venv)
virtual muhitni aktivlashtirish (source venv/bin/activate)
kerakli paketlarni o'rnatib olish (pip install django pillow gunicorn)
migratsiyalarni yaratish (python manage.py makemigrations)
migratsiyalarni qo'llash (python manage.py migrate)
superuser yaratish (python manage.py createsupuseruser)
statik fayllarni yig'ib olish (python manage.py collectstatic)




serverni ishga tushhirib batijani ko'rish mumkin, lekin faqatgina server ishlab turganidaholos (python manage.py runserver 0.0.0.0:8000)
shunda server IP V4 manzili qaysi bo'lsa, o'sha IP manzil davomiga :8000 qo'shish orqali natijani ko'rish mumkin

[REQUIRED]
>>> sudo ufw allow 8000
>>> deactivate

>>> sudo nano /etc/systemd/system/gunicorn.socket
------------------------------------------------------------------------------
[Unit]
Description=gunicorn socket

[Socket]
ListenStream=/run/gunicorn.sock

[Install]
WantedBy=sockets.target
//------------------------------------------------------------------------------

>>> sudo nano /etc/systemd/system/gunicorn.service
------------------------------------------------------------------------------
[Unit]
Description=gunicorn daemon
Requires=gunicorn.socket
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/root/student-management
ExecStart=/root/student-management/venv/bin/gunicorn \
          --access-logfile - \
          --workers 3 \
          --bind unix:/run/gunicorn.sock \
          PROJECT.wsgi:application

[Install]
WantedBy=multi-user.target
//------------------------------------------------------------------------------

>>> sudo systemctl start gunicorn.socket
>>> sudo systemctl enable gunicorn.socket
>>> sudo systemctl daemon-reload
>>> sudo systemctl restart gunicorn

>>> sudo nano /etc/nginx/sites-available/student-management
------------------------------------------------------------------------------
server {
    listen 80;
    server_name 146.190.98.231 mywebsite.com;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {

        root /student-management/static;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/run/gunicorn.sock;
    }
}
//------------------------------------------------------------------------------


>>> sudo systemctl restart nginx
>>> sudo ufw delete allow 8000
>>> sudo ufw allow 'Nginx Full'
>>> sudo systemctl restart gunicorn



! --- !
Agar Django loyiha fayllariga o'zgartirish kiritilsa, o'zgartiriilshlar saytda aks etishi uchun quyidagi buyrqu terilishi kerak:
>>> systemctl restart gunicorn
! --- !